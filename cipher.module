<?php

function cipher_menu() {
    $items['shift_cipher'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );

    $items['encrypt'] = array(
        'title' => 'Encrypt',
        'page callback' => 'shift_cipher',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    return $items;
}

function cipher_form() {
    $form['shift_value'] = array (
        '#title' => 'Shift Value',
        '#type' => 'textfield',
        '#description' => t('The number of places to shift each letter over.'),
        '#element_validate' => array('element_validate_number', 'element_validate_whole_number'),
        '#required' => TRUE,
    );
    $form['shift_direction'] = array (
        '#title' => 'The direction to shift each value.',
        '#type' => 'textfield',
        '#description' => t('Enter the direction you would like to shift each value (left or right)'),
        '#required' => TRUE,
    );

    $form['phrase'] = array (
        '#title' => 'Phrase to Encrypt',
        '#type' => 'textfield',
        '#description' => t('Enter the phrase you would like to encrypt'),
        '#required' => TRUE,
    );

    $form['submit'] =array(
        '#type' => 'submit',
        '#value' => 'Encrypt',
    );
    return $form;

}

function caesar($string, $distance) {
    $distance = $distance % 26;
    $string = strtolower($string);
    $result = array();
    $characters = str_split($string);

    if ($distance < 0) {
        $distance += 26;
    }

    foreach ($characters as $idx => $char) {
        $result[$idx] = chr(97 + (ord($char) - 97 + $distance) % 26);
    }

    return join("", $result);
}





function cipher_form_submit($form, &$form_state) {
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = $form_state['values']['shift_direction'];
    $phrase = $form_state['values']['phrase'];
    $characters = str_split(strtolower($phrase));

    $encrypt = [];

    if ($shift_value < 0) {
        $shift_value += 26;
    }

    foreach ($characters as $idx => $char) {
        $result[$idx] = chr(97 + (ord($char) - 97 + $distance) % 26);
    }

}



    // if($queen_x == $pawn_x && $queen_y == $pawn_y) {
    //     $attack = "Both Queen and Pawn can't occupy the same space.";
    // }
    // elseif(abs($queen_x - $pawn_x) == abs($queen_y - $pawn_y) ) {
    //     $attack = "The Queen can attack the Pawn";
    // }
    // elseif($queen_x - $pawn_x == 0 || $queen_y - $pawn_y == 0) {
    //     $attack = "The Queen can attack the Pawn";
    // }
    // else{
    //     $attack = "Not in range";
    // }

    $result = implode(" ", $encrypt)
    $_SESSION['encrypt_result'] = $result;

    $form_state['redirect'] = 'encrypt';
}

function shift_cipher() {
    $result = $_SESSION['encrypt_result'];
    return $result;
}
